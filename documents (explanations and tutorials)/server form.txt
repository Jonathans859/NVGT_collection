So, what do I mean by server form?
Basically what most of the online games like SBYW/STW do these days. Sending packets with data from the server to the client, which then parses this data, and constructs an audio_form based on the instructions from that data. Pretty useful, so I wondered how to realise it in my game. Here's Sam's explanation to me.
'
When the server sends a form to the client, it should include an ID for that form. The client can then send a packet with the ID to the server upon button press so that the server knows what form to respond to. What I do in stw is send a little bit about each control to the server, and I only send packets when a button is pressed on the client. So I create a string to store the final packet and then loop through the controls in the form when any button in the form is pressed and for each control I add some information to the string. For a checkbox, the ID of the checkbox and if it is checked or not. For a button, whether it is pressed, for a text field the content etc. I send that all to the server, and the server parses the packet and can use the ID to see if it's a login form vs a forgot password form, then the code for each form can look at the parsed packet to determine the state of the form when the user sent it.
'
I know, sounds difficult at first read. But let it go through your mind for a few days and read it again. I'm sure it'll at least give you a basic idea on what to do.